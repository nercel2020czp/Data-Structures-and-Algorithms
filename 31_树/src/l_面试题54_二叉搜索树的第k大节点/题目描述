https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/
面试题54. 二叉搜索树的第k大节点【简单】
给定一棵二叉搜索树，请找出其中第k大的节点。

示例 1:
输入: root = [3,1,4,null,2], k = 1
   3
  / \
 1   4
  \
   2
输出: 4

示例 2:
输入: root = [5,3,6,2,4,null,null,1], k = 3
       5
      / \
     3   6
    / \
   2   4
  /
 1
输出: 4

限制：
1 ≤ k ≤ 二叉搜索树元素个数
----------------------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int kthLargest(TreeNode root, int k) {

    }
}
----------------------------题目解析------------------------------------
要做这道题，首先我们得十分了解二叉搜索树这个数据结构；
二叉查找树（英语：Binary Search Tree），也称为 二叉搜索树、有序二叉树（Ordered Binary Tree）
或排序二叉树（Sorted Binary Tree），是指一棵空树或者具有下列性质的二叉树：
	1.若任意节点的左子树不空，则左子树上所有节点的值均小于它的根节点的值；
	2.若任意节点的右子树不空，则右子树上所有节点的值均大于它的根节点的值；
	3.任意节点的左、右子树也分别为二叉查找树；
	4.没有键值相等的节点。
	
二叉查找树相比于其他数据结构的优势在于查找、插入的时间复杂度较低。为 O(logn)。
二叉查找树是基础性数据结构，用于构建更为抽象的数据结构，如集合、多重集、关联数组等。

二叉查找树的查找过程和次优二叉树类似，通常采取二叉链表作为二叉查找树的存储结构。
中序遍历二叉查找树可得到一个关键字的有序序列，一个无序序列可以通过构造一棵二叉查
找树变成一个有序序列，构造树的过程即为对无序序列进行查找的过程。每次插入的新的结点
都是二叉查找树上新的叶子结点，在进行插入操作时，不必移动其它结点，只需改动某个结点的
指针，由空变为非空即可。搜索、插入、删除的复杂度等于树高，期望 O(logn)，最坏 O(n)（数列有序，树退化成线性表）。

虽然二叉查找树的最坏效率是 O(n)，但它支持动态查询，且有很多改进版的二叉查找树可以使树高为 O(logn)，
从而将最坏效率降至 O(logn)，如 AVL 树、红黑树等。

作者：yang_hang
链接：https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/solution/javaji-bai-100de-xiang-xi-jie-da-di-gui-he-die-dai/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。