package sort02_选择排序;
// 选择排序：方法2：【从无序序列中找出最大的那个元素，然后与无序序列最后面的那个元素交换位置】
//只能从后往前排序
public class SelectSort2 {
	// 选择排序：方法2：【从无序序列中找出最大的那个元素，然后与无序序列最后面的那个元素交换位置】
	//只能从后往前排序
	public static void selectSort(int[] arr) {
		//在推导的过程，我们发现了规律，因此，可以使用for来解决
		//选择排序时间复杂度是 O(n^2)
		for (int i = arr.length - 1; i > 0; i--) {
			int minIndex = i;
			int min = arr[i];
			for (int j = i + 1; j < arr.length; j++) {
				if (min > arr[j]) { // 说明假定的最小值，并不是最小
					min = arr[j]; // 重置min
					minIndex = j; // 重置minIndex
				}
			}
			// 将最小值，放在arr[0], 即交换
			if (minIndex != i) {
				arr[minIndex] = arr[i];
				arr[i] = min;
			}
			//System.out.println("第"+(i+1)+"轮后~~");
			//System.out.println(Arrays.toString(arr));// 1, 34, 119, 101
		}
	}
}
